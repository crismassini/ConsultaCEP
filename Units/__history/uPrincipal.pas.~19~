unit uPrincipal;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, System.Actions, Vcl.ActnList, Vcl.Menus,
  Vcl.ComCtrls, Vcl.Imaging.pngimage, Vcl.ExtCtrls, Vcl.StdCtrls;

type
  TfrmPrincipal = class(TForm)
    StatusBar1: TStatusBar;
    MainMenu1: TMainMenu;
    Cadastros: TMenuItem;
    Confirao1: TMenuItem;
    sobrte1: TMenuItem;
    Consutas1: TMenuItem;
    sair1: TMenuItem;
    ActionList1: TActionList;
    actSair: TAction;
    Image1: TImage;
    actSobre: TAction;
    ConsultaCEP1: TMenuItem;
    N1: TMenuItem;
    Cadastro1: TMenuItem;
    actConsultarCEP: TAction;
    Button1: TButton;
    procedure actSairExecute(Sender: TObject);
    procedure actSobreExecute(Sender: TObject);
    procedure actConsultarCEPExecute(Sender: TObject);
    procedure Button1Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frmPrincipal: TfrmPrincipal;

implementation

uses
  ufrmSobre, ufrmConsultarCEP, uConexao;
{$R *.dfm}

procedure TfrmPrincipal.actConsultarCEPExecute(Sender: TObject);
begin
  if not (TfrmConsultarCep = nil) then
  begin
    Application.CreateForm(TfrmConsultarCep, frmConsultarCep);
    frmConsultarCEP.Show;
  end;
end;

procedure TfrmPrincipal.actSairExecute(Sender: TObject);
begin
  Close;
end;

procedure TfrmPrincipal.actSobreExecute(Sender: TObject);
begin
  if not (TfrmSobre = nil) then
  begin
    Application.CreateForm(TfrmSobre, frmSobre);
    frmSobre.Show;
  end;
end;

procedure TfrmPrincipal.Button1Click(Sender: TObject);
var
  Conexao: TConexao;
begin
  Conexao := TConexao.Create;
  try
    Conexao.GetConn.Connected := true;

    if Conexao.GetConn.Connected then
      ShowMessage('Conextado');

  finally
    FreeAndNil(Conexao)
  end;
end;

initialization
  ReportMemoryLeaksOnShutdown := True;

end.
